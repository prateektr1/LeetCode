/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    List<List<Integer>> ans = new LinkedList<List<Integer>>();
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        if(root==null)
            return ans;
        
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        
        q.add(root);
      //  ans.add(root);
        while(!q.isEmpty())
        {
            int size = q.size();
            List<Integer> currentLevel = new ArrayList<Integer>();
            
            for(int i=0;i<size;i++)
            {
                TreeNode current = q.remove();
                currentLevel.add(current.val);
                if(current.left!=null)
                {
                    q.add(current.left);
                }
                 
                if(current.right!=null)
                {
                    q.add(current.right);
                }   
            }
            ans.add(currentLevel);
        }
        
        return ans;
        
    }
}
