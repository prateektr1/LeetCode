/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    
    ListNode nullptr = null;
    public ListNode detectCycle(ListNode head) {
        
        if (head==null || head.next==null)
            return nullptr;
        ListNode fast = head;
        ListNode slow = head;
        while(fast !=null&& fast.next!=null && slow!=null) {
            fast = fast.next.next;
            slow = slow.next;
            if (fast == slow) {
                fast = head;
                while (fast != slow) {                    
                    fast = fast.next;
                    slow = slow.next;
                }
                return slow;
            }
        }
        return nullptr;  
    }
}
